[
  {
    "name": "search_nodes",
    "description": "Search n8n nodes by keyword. Pass query as string. Example: query=\"webhook\" or query=\"database\". Returns max 20 results.",
    "inputSchema": {
      "type": "object",
      "properties": {
        "query": {
          "type": "string",
          "description": "Search terms. Use quotes for exact phrase."
        },
        "limit": {
          "type": "number",
          "description": "Max results (default 20)",
          "default": 20
        },
        "mode": {
          "type": "string",
          "enum": [
            "OR",
            "AND",
            "FUZZY"
          ],
          "description": "OR=any word, AND=all words, FUZZY=typo-tolerant",
          "default": "OR"
        }
      },
      "required": [
        "query"
      ]
    }
  },
  {
    "name": "list_nodes",
    "description": "List n8n nodes. Common: list_nodes({limit:200}) for all, list_nodes({category:'trigger'}) for triggers. Package: \"n8n-nodes-base\" or \"@n8n/n8n-nodes-langchain\". Categories: trigger/transform/output/input.",
    "inputSchema": {
      "type": "object",
      "properties": {
        "package": {
          "type": "string",
          "description": "\"n8n-nodes-base\" (core) or \"@n8n/n8n-nodes-langchain\" (AI)"
        },
        "category": {
          "type": "string",
          "description": "trigger|transform|output|input|AI"
        },
        "developmentStyle": {
          "type": "string",
          "enum": [
            "declarative",
            "programmatic"
          ],
          "description": "Usually \"programmatic\""
        },
        "isAITool": {
          "type": "boolean",
          "description": "Filter AI-capable nodes"
        },
        "limit": {
          "type": "number",
          "description": "Max results (default 50, use 200+ for all)",
          "default": 50
        }
      }
    }
  },
  {
    "name": "get_node_info",
    "description": "Get full node documentation. Pass nodeType as string with prefix. Example: nodeType=\"nodes-base.webhook\"",
    "inputSchema": {
      "type": "object",
      "properties": {
        "nodeType": {
          "type": "string",
          "description": "Full type: \"nodes-base.{name}\" or \"nodes-langchain.{name}\". Examples: nodes-base.httpRequest, nodes-base.webhook, nodes-base.slack"
        }
      },
      "required": [
        "nodeType"
      ]
    }
  },
  {
    "name": "validate_workflow",
    "description": "Full workflow validation: structure, connections, expressions, AI tools. Returns errors/warnings/fixes. Essential before deploy.",
    "inputSchema": {
      "type": "object",
      "properties": {
        "workflow": {
          "type": "object",
          "description": "The complete workflow JSON to validate. Must include nodes array and connections object."
        },
        "options": {
          "type": "object",
          "properties": {
            "validateNodes": {
              "type": "boolean",
              "description": "Validate individual node configurations. Default true.",
              "default": true
            },
            "validateConnections": {
              "type": "boolean",
              "description": "Validate node connections and flow. Default true.",
              "default": true
            },
            "validateExpressions": {
              "type": "boolean",
              "description": "Validate n8n expressions syntax and references. Default true.",
              "default": true
            },
            "profile": {
              "type": "string",
              "enum": [
                "minimal",
                "runtime",
                "ai-friendly",
                "strict"
              ],
              "description": "Validation profile for node validation. Default \"runtime\".",
              "default": "runtime"
            }
          },
          "description": "Optional validation settings"
        }
      },
      "required": [
        "workflow"
      ],
      "additionalProperties": false
    },
    "outputSchema": {
      "type": "object",
      "properties": {
        "valid": {
          "type": "boolean"
        },
        "summary": {
          "type": "object",
          "properties": {
            "totalNodes": {
              "type": "number"
            },
            "enabledNodes": {
              "type": "number"
            },
            "triggerNodes": {
              "type": "number"
            },
            "validConnections": {
              "type": "number"
            },
            "invalidConnections": {
              "type": "number"
            },
            "expressionsValidated": {
              "type": "number"
            },
            "errorCount": {
              "type": "number"
            },
            "warningCount": {
              "type": "number"
            }
          }
        },
        "errors": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "node": {
                "type": "string"
              },
              "message": {
                "type": "string"
              },
              "details": {
                "type": "string"
              }
            }
          }
        },
        "warnings": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "node": {
                "type": "string"
              },
              "message": {
                "type": "string"
              },
              "details": {
                "type": "string"
              }
            }
          }
        },
        "suggestions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "valid",
        "summary"
      ]
    }
  },
  {
    "name": "n8n_create_workflow",
    "description": "Create workflow. Requires: name, nodes[], connections{}. Created inactive. Returns workflow with ID.",
    "inputSchema": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Workflow name (required)"
        },
        "nodes": {
          "type": "array",
          "description": "Array of workflow nodes. Each node must have: id, name, type, typeVersion, position, and parameters",
          "items": {
            "type": "object",
            "required": [
              "id",
              "name",
              "type",
              "typeVersion",
              "position",
              "parameters"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "typeVersion": {
                "type": "number"
              },
              "position": {
                "type": "array",
                "items": {
                  "type": "number"
                },
                "minItems": 2,
                "maxItems": 2
              },
              "parameters": {
                "type": "object"
              },
              "credentials": {
                "type": "object"
              },
              "disabled": {
                "type": "boolean"
              },
              "notes": {
                "type": "string"
              },
              "continueOnFail": {
                "type": "boolean"
              },
              "retryOnFail": {
                "type": "boolean"
              },
              "maxTries": {
                "type": "number"
              },
              "waitBetweenTries": {
                "type": "number"
              }
            }
          }
        },
        "connections": {
          "type": "object",
          "description": "Workflow connections object. Keys are source node IDs, values define output connections"
        },
        "settings": {
          "type": "object",
          "description": "Optional workflow settings (execution order, timezone, error handling)",
          "properties": {
            "executionOrder": {
              "type": "string",
              "enum": [
                "v0",
                "v1"
              ]
            },
            "timezone": {
              "type": "string"
            },
            "saveDataErrorExecution": {
              "type": "string",
              "enum": [
                "all",
                "none"
              ]
            },
            "saveDataSuccessExecution": {
              "type": "string",
              "enum": [
                "all",
                "none"
              ]
            },
            "saveManualExecutions": {
              "type": "boolean"
            },
            "saveExecutionProgress": {
              "type": "boolean"
            },
            "executionTimeout": {
              "type": "number"
            },
            "errorWorkflow": {
              "type": "string"
            }
          }
        }
      },
      "required": [
        "name",
        "nodes",
        "connections"
      ]
    }
  },
  {
    "name": "n8n_update_full_workflow",
    "description": "Full workflow update. Requires complete nodes[] and connections{}. For incremental use n8n_update_partial_workflow.",
    "inputSchema": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Workflow ID to update"
        },
        "name": {
          "type": "string",
          "description": "New workflow name"
        },
        "nodes": {
          "type": "array",
          "description": "Complete array of workflow nodes (required if modifying workflow structure)",
          "items": {
            "type": "object",
            "additionalProperties": true
          }
        },
        "connections": {
          "type": "object",
          "description": "Complete connections object (required if modifying workflow structure)"
        },
        "settings": {
          "type": "object",
          "description": "Workflow settings to update"
        }
      },
      "required": [
        "id"
      ]
    }
  },
  {
    "name": "n8n_delete_workflow",
    "description": "Permanently delete a workflow. This action cannot be undone.",
    "inputSchema": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Workflow ID to delete"
        }
      },
      "required": [
        "id"
      ]
    }
  },
  {
    "name": "n8n_list_workflows",
    "description": "List workflows (minimal metadata only). Returns id/name/active/dates/tags. Check hasMore/nextCursor for pagination.",
    "inputSchema": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "number",
          "description": "Number of workflows to return (1-100, default: 100)"
        },
        "cursor": {
          "type": "string",
          "description": "Pagination cursor from previous response"
        },
        "active": {
          "type": "boolean",
          "description": "Filter by active status"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Filter by tags (exact match)"
        },
        "projectId": {
          "type": "string",
          "description": "Filter by project ID (enterprise feature)"
        },
        "excludePinnedData": {
          "type": "boolean",
          "description": "Exclude pinned data from response (default: true)"
        }
      }
    }
  },
  {
    "name": "n8n_get_workflow",
    "description": "Get a workflow by ID. Returns the complete workflow including nodes, connections, and settings.",
    "inputSchema": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Workflow ID"
        }
      },
      "required": [
        "id"
      ]
    }
  }
]